module.exports = exports = convert

function convert(rules, opt) {
    opt = opt || {}
    rules = rules + ''
    var arr = rules
        .trim()
        .split(/--whitelist--/i)[0] // ignore whitelist
        .split('\n')
        .map(convertLine)
        .filter(function(x) {
            return x
        })

    var ret = rule2pac(arr, opt)
    return ret
}

function pacTemplate() {
    // generated by rule2pac, inspired by @clowwindy
    var _proxy = 'SOCKS5 127.0.0.1:1080; SOCKS 127.0.0.1:1080;'
    var _direct = 'DIRECT;'
    var proxy = _proxy + ' ' + _direct
    var direct = _direct + ' ' + _proxy
    
    var domains = "domains"
    var precheck = "precheck".split(/\s+/)
    var shouldPrecheck = !!precheck[0]

    function FindProxyForURL(url, host) {
        var pos = -1
        if (shouldPrecheck) {
            for (var i = 0; i < precheck.length; i++) {
                if (-1 != host.indexOf(precheck[i])) {
                    return proxy
                }
            }
        }
        while (true) {
            if (!host) return direct
            if (domains.hasOwnProperty(host)) {
                return proxy
            }
            pos = host.indexOf('.', pos + 1)
            if (-1 == pos) {
                host = null
            } else {
                host = host.substr(pos + 1)
            }
        }
    }
}

function rule2pac(arr, opt) {
    // uniq arr
    var hash = {}
    for (var i = 0; i < arr.length; i++) {
        hash[arr[i]] = true
    }
    arr = Object.keys(hash)
    var domains = arr.map(function(domain) {
        // domain => 'domain': true
        return "    '" + domain + "': true"
    }).join(',\n')

    var template = pacTemplate.toString().split('\n')
    template.pop()
    template.shift()
    template = template.map(function(x) {
        return x.substr(4)
    }).join('\n')
    var precheck = opt.precheck || ''
    template = template
        .replace('"precheck"', '"' + precheck + '"')
        .replace('"domains"', '{\n' + domains + '\n}')
    return template
}

var isHost = /^[\w.-]/

function convertLine(line) {
    // [\w.-] = host
    // ! comment
    // ||
    // | care about protocol, fuck it
    // @@|| = ||

    line = line.trim()
    if (!line) return
    var start = line[0]
    if ('!' == start) return
    var ret
    if (0 == line.indexOf('||')) {
        ret = line.substr(2)
    } else if (0 == line.indexOf('@@||')) {
        ret = line.substr(4)
    } else if (isHost.test(start)) {
        ret = line
    } else if ('|' == start) {
        var index = line.lastIndexOf('//')
        if (-1 != index) {
            ret = line.substr(index + 2)
        }
    }
    if (!ret) {
        //console.log(line)
        return
    }
    if ('.' == ret[0]) ret = ret.substr(1)
    if ('*' == ret[0]) ret = ret.substr(1)
    ret = ret.split('/')[0]
    if (-1 != ret.indexOf('*')) return
    return ret
}
